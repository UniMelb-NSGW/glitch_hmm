function [Fn,Qn] = comp_noise_cov(z,q)
% compute noise covariance as a function of z and q
Fn=[1 z;0 1];
Qn=[z^3/3 z^2/2;z^2/2 z]*q;






% % Q(1,1)=1/120*n*(n+1)*(2*n+1)*(3*n^2+3*n-1);
% % Q(1,2)=n^2*(n+1)^2/8;Q(2,1)=Q(1,2);
% % Q(1,3)=n*(n+1)*(2*n+1)/12;Q(3,1)=Q(1,3);Q(2,2)=2*Q(1,3);
% % Q(2,3)=n*(n+1)/2;Q(3,2)=Q(2,3);
% % Q(3,3)=n+1;
% n=vpa(n);
% Q(1,1)=1/120*n*(n+1)*(2*n+1)*(3*n^2+3*n-1)+(n*(n+1))^2/8+n*(n+1)*(2*n+1)/24;
% Q(1,2)=n^2*(n+1)^2/8+n*(n+1)*(2*n+1)/12;Q(2,1)=Q(1,2);
% Q(1,3)=n*(n+1)*(2*n+1)/12+n*(n+1)/4;Q(3,1)=Q(1,3);
% Q(2,2)=n*(n+1)*(2*n+1)/6;
% Q(2,3)=n*(n+1)/2;Q(3,2)=Q(2,3);
% Q(3,3)=n+1;
% 
%  
% Qn=double(q*Q);
% % Fn=[1 n 1/2*n^2; 0 1 n; 0 0 1];
% Fn=double([1 n n*(n+1)/2;0 1 n; 0 0 1]);
% 
% % % Q=[ n^5/20, n^4/8, n^3/6;
% %    n^4/8, n^3/3, n^2/2;
% %    n^3/6, n^2/2,     n+1];